Create next js app named "client" by using npx create-next-app@latest
Then don't use src directory and turbopack, else do yes for everything
Now in the video tailwind.config.ts file is present is their project but in mine it is not, so create the file and write the code there

Do npm i next-themes in client, Important for implementing dark and light mode

Come to app/page.tsx and remove all things and write our own code

We need some helper components so create utils folder under app

create Heading.tsx in utils folder to keep the metadata 
Now come to app/page.tsx and render Heading component by passing props title,description,keywords

Update global.css in app : write hero-animation and keyframes

Create theme-provider.tsx in utils

Update layout.tsx in app


Update Header.tsx in components 
Create NavItems,tsx in utils folder

Create ThemeSwitcher.tsx in utils

NOTE: For named export like export const Fn() we need to import in curly braces like import {Fn} from ..., but for default export like 
const Fn=()=>{
    //code
}
export default Fn;
For above type we can import without curly braces

Make the header and hero section and also mobile view with sidebar open close functionality

Now install material ui & more : npm install @mui/material @emotion/react @emotion/styled react-hot-toast react-redux @reduxjs/toolkit formik yup

In header.tsx, in below write login signup logic, create CustomModal.tsx in utils. This is a helper component

Now create login component in components/auth folder

create styls/style.ts to use similar styles

Create login component then signup component then verification component

Connect redux: create redux folder and folders within it. And write the files

We are using RTT query. See the use of it in detail
Create authApi.ts 

In authentication : we are getting the token from backend and we are setting that globally, for that token can be used from everywhere
authApi.ts file is responsible for that

Now for social auth create pages folder and within that api/_app.tsx folder

Now in api folder create auth then within that create [...nextauth].ts file

To get Google client id and secret:
Now go to https://console.cloud.google.com/cloud-resource-manager -> click create project -> select the project -> goto api & services -> credentials -> create credentials -> Outh client id -> configure consent screen -> from sidebar api & services> enable api & services -> credentials -> create credentials -> oauth client id -> configure consent screen -> create oauth client id -> in Authorized JavaScript origins add http://localhost:3000 -> add callback uri = http://localhost:3000/api/auth/callback/google -> create-> Then copy client id and secret and put in env of client

Now To get github client id and secret:

Go to github -> settings -> developer settings -> Oauth apps-> new oauth app -> give app name , hompage url =http://localhost:3000 , callback url = http://localhost:3000/api/auth/callback/github -> register application -> get client id and secret 

Make a loader by creating a Loader folder under components.

And wrap the loader in layout.tsx

Now create profile page .

In profile page if no user is logged in then if user tries to enter the /profile route then they will be redirected to homepage. For this we have to create custom hooks

Create profile page, the components are there in Profile folder under components

Change avatar is doing problem so I am not including it.

start from 4:18:28

